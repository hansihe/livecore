{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "OrchServerMsg",
  "anyOf": [
    {
      "description": "Sent by the server after it has received a `ClientHandshake`.",
      "type": "object",
      "required": [
        "challenge",
        "challenge_response",
        "client_uuid",
        "pubkey",
        "ty"
      ],
      "properties": {
        "challenge": {
          "$ref": "#/definitions/Challenge"
        },
        "challenge_response": {
          "$ref": "#/definitions/ChallengeResponse"
        },
        "client_uuid": {
          "description": "UUID assigned to the client for the fabric session.",
          "allOf": [
            {
              "$ref": "#/definitions/uuid"
            }
          ]
        },
        "pubkey": {
          "description": "For the duration of the fabric session, the orchestrator will have a single keypair. This is the public key for that pair.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        },
        "ty": {
          "type": "string",
          "enum": [
            "server_handshake"
          ]
        }
      }
    },
    {
      "description": "Used in tests, makes the client process disconnect and exit.",
      "type": "object",
      "required": [
        "ty"
      ],
      "properties": {
        "ty": {
          "type": "string",
          "enum": [
            "test_exit"
          ]
        }
      }
    },
    {
      "type": "object",
      "required": [
        "connector",
        "peer_nonce",
        "peer_pubkey",
        "peer_uuid",
        "self_nonce",
        "ty"
      ],
      "properties": {
        "connector": {
          "$ref": "#/definitions/PeerConnectionType"
        },
        "peer_nonce": {
          "$ref": "#/definitions/uuid"
        },
        "peer_pubkey": {
          "description": "The pubkey of the peer node.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        },
        "peer_uuid": {
          "description": "The UUID of the peer we should connect to in the fabric.",
          "allOf": [
            {
              "$ref": "#/definitions/uuid"
            }
          ]
        },
        "self_nonce": {
          "description": "`self_nonce` and `peer_nonce` are UUIDs generated by the orchestrator that are unique, random, and only used for this handshake.\n\nThese are only known by this node and the connecting peer, and can be used for any purpose depending on the transport used.",
          "allOf": [
            {
              "$ref": "#/definitions/uuid"
            }
          ]
        },
        "ty": {
          "type": "string",
          "enum": [
            "connect_peer"
          ]
        }
      }
    },
    {
      "type": "object",
      "required": [
        "fail_reason",
        "peer_uuid",
        "ty"
      ],
      "properties": {
        "fail_reason": {
          "description": "A human readable reason for the connection failure. Mainly used for debugging.",
          "type": "string"
        },
        "peer_uuid": {
          "description": "The peer we attempted to connect to.",
          "allOf": [
            {
              "$ref": "#/definitions/uuid"
            }
          ]
        },
        "ty": {
          "type": "string",
          "enum": [
            "peer_connection_failed"
          ]
        }
      }
    },
    {
      "type": "object",
      "required": [
        "peer_uuid",
        "ty"
      ],
      "properties": {
        "peer_uuid": {
          "$ref": "#/definitions/uuid"
        },
        "ty": {
          "type": "string",
          "enum": [
            "peer_connection_success"
          ]
        }
      }
    },
    {
      "type": "object",
      "required": [
        "fail_reason",
        "peer_uuid",
        "ty"
      ],
      "properties": {
        "fail_reason": {
          "description": "A human readable reason for the connection failure. Mainly used for debugging.",
          "type": "string"
        },
        "peer_uuid": {
          "$ref": "#/definitions/uuid"
        },
        "ty": {
          "type": "string",
          "enum": [
            "peer_connection_disconnected"
          ]
        }
      }
    }
  ],
  "definitions": {
    "Challenge": {
      "type": "object",
      "required": [
        "challenge"
      ],
      "properties": {
        "challenge": {
          "description": "Challenge for the client to sign with its private key. A value should be formatted as `__HANDSHAKE_CHALLENGE__{challenge}{nonce}__HANDSHAKE_CHALLENGE__` signed, and returned as a `ChallengeResponse`.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          },
          "maxItems": 32,
          "minItems": 32
        }
      }
    },
    "ChallengeResponse": {
      "type": "object",
      "required": [
        "challenge_response",
        "signature"
      ],
      "properties": {
        "challenge_response": {
          "description": "The response for the challenge from the server.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        },
        "signature": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        }
      }
    },
    "PeerConnectionType": {
      "anyOf": [
        {
          "type": "object",
          "required": [
            "socket_path",
            "ty"
          ],
          "properties": {
            "socket_path": {
              "type": "string"
            },
            "ty": {
              "type": "string",
              "enum": [
                "ipc_client"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ty"
          ],
          "properties": {
            "ty": {
              "type": "string",
              "enum": [
                "ipc_server"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ty"
          ],
          "properties": {
            "ty": {
              "type": "string",
              "enum": [
                "websocket_client"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ty"
          ],
          "properties": {
            "ty": {
              "type": "string",
              "enum": [
                "websocket_server"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ty"
          ],
          "properties": {
            "ty": {
              "type": "string",
              "enum": [
                "web_r_t_c"
              ]
            }
          }
        }
      ]
    },
    "uuid": {
      "type": "string",
      "format": "uuid"
    }
  }
}